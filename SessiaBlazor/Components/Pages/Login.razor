@page "/login"
@inject SessiaBlazor.Services.AuthApiService AuthApiService
@inject NavigationManager Navigation
@inject IJSRuntime JS
@rendermode InteractiveServer

<div class="register-bg-orange">
    <div class="register-card-orange shadow">
        <h3 class="text-center mb-4">Вход</h3>
        <EditForm Model="loginModel" OnValidSubmit="HandleLogin" FormName="asd">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="mb-3">
                <label class="form-label">Логин</label>
                <InputText @bind-Value="loginModel.UserName" class="form-control" placeholder="Введите логин" />
            </div>
            <div class="mb-3">
                <label class="form-label">Пароль</label>
                <InputText @bind-Value="loginModel.Password" type="password" class="form-control" placeholder="Введите пароль" />
            </div>
            <button type="submit" class="btn btn-orange w-100">Войти</button>
        </EditForm>
        @if (errorMessage != null)
        {
            <p class="text-danger mt-3 text-center">@errorMessage</p>
        }
        <div class="mt-3 text-center">
            <a href="/registration">Нет аккаунта? Зарегистрироваться</a>
        </div>
    </div>
</div>

<style>
.form-label {
    font-weight: 500;
    color: #ff3d00;
}
.form-control {
    border-radius: 10px;
    padding: 0.8rem 1.1rem;
    font-size: 1.05rem;
    border: 1.5px solid #ff9800;
    transition: border-color 0.2s, box-shadow 0.2s;
}
.form-control:focus {
    border-color: #ff3d00;
    box-shadow: 0 0 0 2px #ff980055;
}
.btn-orange {
    background: linear-gradient(90deg, #ff9800 0%, #ff3d00 100%);
    border: none;
    border-radius: 10px;
    font-weight: 600;
    font-size: 1.1rem;
    padding: 0.8rem;
    color: #fff;
    box-shadow: 0 2px 8px 0 rgba(255, 152, 0, 0.12);
    transition: background 0.2s, box-shadow 0.2s;
}
.btn-orange:hover {
    background: linear-gradient(90deg, #ff6d00 0%, #d50000 100%);
    box-shadow: 0 4px 16px 0 rgba(255, 61, 0, 0.18);
}
</style>

@code {
    private SessiaBlazor.Model.LoginRequest loginModel = new();
    private string errorMessage;
    private SessiaBlazor.Model.User currentUser;

    private async Task HandleLogin()
    {
        var user = await AuthApiService.LoginAsync(loginModel);
        if (user != null)
        {
            currentUser = user;
            var json = System.Text.Json.JsonSerializer.Serialize(user);
            await JS.InvokeVoidAsync("localStorage.setItem", "currentUser", json);
            Navigation.NavigateTo("/", true);
        }
        else
        {
            errorMessage = "Неверный логин или пароль";
        }
    }
} 